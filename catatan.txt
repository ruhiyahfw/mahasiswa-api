1. Install nodejs
2.  - npm init --> membuat package.json
    - membuat server.js --> import app
    - import express di app.js
3.  - membuat routes
4.  - install nodemon
    - install morgan --> untuk melihat log server
    - install body-parser --> mengambil data di request body
5.  - handle error --> pake middleware
    - install mysql
6.  - buat database mahasiswa_api
    - buat tabel mahasiswa (di sql, tdk pakai sequelize)
    - npm i mysql
    - buat config > mysql.js
7.  - get pakai query
8.  - post, put, delete pakai query
9.  - req.params --> /10001 | /:nim
    - req.query ---> /search?nim=10001 | /search | ambil nim = req.query.nim
    - req.body ----> utk create/ update -- pakai body parser
10. object relational mapping (ORM) dengan sequelize
    - npm install sequelize mysql2
    - ubah mysql.js
    - buat model, controller
    - ubah routes > mahasiswa
11. - async
        - akses ke db, akses ke file, atau ajax call
    - await
        - menunda eksekusi hingga proses asynchronous selesai
        - cth di: await model.mahasiswa.findAll(); baris selanjutnya baru akan dijalankan jika findAll() sudah selesai
    - tambahin controller mahasiswa dg fungsi2 lain
12. - select beberapa atribut saja di sequelize
    - kasih alias untuk atribut get
    - where sequelize : const {Op} = require('sequelize')
        - and, or
        - between
    - order by
    - limit
13. - sequelize join
    - add table jurusan
    - tambahkan foreign key di model mhs
    - oh teryata dia pakai query aja
14. upload file di nodejs
    - tambah atribut foto string
    - npm install multer
    - tambah kode di routes > mahasiswa
    - upload foto di post sbg req.file.path